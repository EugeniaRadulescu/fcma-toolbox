README for building FCMA dependencies
----

The FCMA toolbox uses MPI and CBLAS calls. We use OpenMPI and
GotoBLAS2 and have had success with them, however you may prefer
or already have other implementations. The API calls used by
the FCMA source are basic & low in number, and should work with any
implementatation; some experimentation to determine optimal BLAS
libraries was done already, but is always a useful exercise.

C++ features are used sparingly (mostly as "a better C") and so
conversion to C for compatibility, if desired, should be 
fairly trivial (but not necessary, in the instructions below.)

- OpenMPI             www.open-mpi.org
- GotoBLAS2           www.tacc.utexas.edu/tacc-software/gotoblas2
- Nifticlib 2.0       sourceforge.net/projects/niftilib

Linux
------
All dependencies should install readily on Linux, consult their
project pages, if an appropriate .rpm/.deb binary package
cannot be found.

Mac OS X
-------
Note that the FCMA toolbox needs a cluster to run the voxel
selection phase, but as time passes a single-Mac multiple GPU
solution may become viable even for this step, but it may be awhile.
As of now, FCMA is MPI/BLAS based, not GCD/OpenCL based, so that
the source code is the same on a Linux cluster as it is on a Mac.

Warning! The below instructions install into /usr/local; this may
interfere with package managers such as Homebrew. As long as you
install the dependencies in a place FCMA can find, you should be
fine. Note that your C++ compilers should support OpenMP.

So that everything is compiled using same compiler, be sure to complete
tehe gcc install before the others, and if continuing from where you left off,
be sure that /usr/local/bin is first in your PATH so you get the 
compilers installed in step 2, when doing the later steps. You
might want to add

export PATH=/usr/local/bin:$PATH

to your ~/.profile

optional but "man mpiexec" will work:
export MANPATH=/usr/local/share/man:$MANPATH

(At time of this README, Mac OS X 10.8.4 "Mountain Lion"
 was the latest version, and used for this example)

1. Install Xcode command line tools
   a. install Xcode from Mac App Store
   b. in Xcode prefs, download Command Line Tools
2. Download and install gcc and gfortran for OS X from hpc.sourceforge.net
   a. curl -O http://prdownloads.sourceforge.net/hpc/gcc-mlion.tar.gz
   b. curl -O http://prdownloads.sourceforge.net/hpc/gfortran-mlion.tar.gz
   c. sudo tar -C /. -xzvf gcc-mlion.tar.gz
   d. sudo tar -C /. -xzvf gfortran-mlion.tar.gz
   e. export PATH=/usr/local/bin:$PATH
3. Compile and install OpenMPI (http://www.open-mpi.org/software/)
   a. curl -O http://www.open-mpi.org/software/ompi/v1.6/downloads/openmpi-1.6.5.tar.gz
   b. tar xzvf openmpi-1.6.5.tar.gz
   c. cd openmpi-1.6.5
   d. ./configure && make all && sudo make install
       - this will take awhile and your sudo permission will time-out;
         be sure to respond to the "Password:" prompt to complete the install
4. Compile GotoBLAS2 (only if not using Accelerate framework)
   a. download in browser from http://www.tacc.utexas.edu/tacc-projects/gotoblas2/
      - (no curl command becuase URL looks to be
        obfuscated?/dynamic?/certainly long)
   b. tar xzvf GotoBLAS2-1.13.tar.gz 
   c. cd GotoBLAS2
   d. change "-lSystemStubs" to "-lSystem" in Makefile.system
   d. make
   e. you may get an error in the tests related to the old Makefile
      (GotoBLAS is no longer being updated) but this will be after
      libgoto2.a is created, which is what is needed here
   f. sudo cp libgoto2.a /usr/local/lib/
   g. add the line "typedef long blasint;" to top of cblas.h
   h. sudo cp cblas.h /usr/local/include/
   ** simply adding "-framework Accelerate" to FCMA's Makefile is another option **
5. Compile nifticlib (v.2.0.0 current as of this document)
   a. curl -O
http://sourceforge.net/projects/niftilib/files/nifticlib/nifticlib_2_0_0/nifticlib-2.0.0.tar.gz
   b. tar xzvf nifticlib-2.0.0.tar.gz
   c. cd nifticlib-2.0.0
   d. make
   e. sudo cp lib/* /usr/local/lib/
   f. sudo cp include/* /usr/local/include/

FCMA
---
   in the "fcma-toolbox/src" directory:
6.  edit Makefile.<platform> if necessary
       - on Mac OS X, if dependencies built as above, Makefile.mac 
7.  comment out the other "include" lines in Makefile, just include Makefile.<platform>
8.  make (in src directory)
9.  sudo cp pni_fcma /usr/local/bin/ if desired
